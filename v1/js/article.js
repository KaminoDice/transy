/*页面层(article.html)*********************************************************************************//**   * Init the translation page. * * @method initTranslationPage * @param {Object} article - The object of an article.  * @return {none}  */function initTranslationPage(article){		//获取主div容器		var main = document.getElementById("main");	//设置标题	var enTitle = document.getElementById("enTitle");	enTitle.innerHTML = article.enTitle;	var cnTitle = document.getElementById("cnTitle");	cnTitle.value = article.cnTitle;		//设置中英对照正文	for(var i=0; i<article.itemList.length; i++) {		var item = article.itemList[i];		//若为图片条目		if(item.itemType == GLOBAL.itemType.IMAGE){				//创建图片条目			var imgItem = createImageItem(item.enItem);			main.appendChild(imgItem);		}		//若为文本条目		else {											//创建文本条目			var textItem = createTextItem(item.itemType, item.enItem, item.cnItem, item.tranState);			main.appendChild(textItem);			//设置状态栏、中文段落的高度			var enPara = textItem.getElementsByClassName("item-en")[0];			var cnPara = textItem.getElementsByClassName("item-cn")[0];			var stateBar = textItem.getElementsByTagName("hr")[0];			cnPara.style.height = enPara.offsetHeight + "px";			stateBar.style.height = enPara.offsetHeight + GLOBAL.DISTANCE + "px";		}		}		//设置注解	var sups = document.getElementsByTagName("mark");	if(sups.length != 0){		for(var j=0; j<sups.length; j++){			//设置注解内容			sups[j].content = article.commentList[j];						//鼠标点击则显示注解框；反之隐藏			sups[j].onclick = function(event){				var comment = document.getElementById("commentShow");				comment.sourceSup = this;				comment.value = this.content;				comment.style.display = "block";				comment.style.top = event.clientY + 5 + "px";				comment.style.width = 200 + "px";				if((screen.width - 32 - event.clientX) < 200){					comment.style.left = null;					comment.style.right = 10 + "px";				} else {					comment.style.left = event.clientX + "px";					comment.style.right = null;				}				comment.focus();				comment.onblur = function(){							this.style.display = "none";					this.sourceSup.content = this.value;				}			}		}	}		//设置公式	var formulas = document.getElementsByClassName("formulaImage");	for(var k=0; k<formulas.length; k++){		//点击公示图片，显示公式编辑框		formulas[k].onclick = function(event){		 	var fe = document.getElementById("formulaEditor");			fe.value = this.src.split('?')[1];			fe.sourceFormula = this;			fe.style.display = "block";							//设置公式位置			fe.style.left = event.clientX + "px";			fe.style.top = event.clientY + 10 + "px";			fe.focus();							//失去焦点			fe.onblur = function(){				this.style.display = "none";				this.sourceFormula.src = GLOBAL.formulaServer + this.value;			}							//输入变化			fe.oninput = function(){				this.sourceFormula.src = GLOBAL.formulaServer + this.value;			}		}				//公式图片载入完毕，则重新设置高度		formulas[k].onload = function(){			//设置状态栏、中文段落的高度			var itemDiv = this.parentNode.parentNode;			var enPara = this.parentNode;			var cnPara = itemDiv.getElementsByClassName("item-cn")[0];			var stateBar = itemDiv.getElementsByTagName("hr")[0];			cnPara.style.height = enPara.offsetHeight + "px";			stateBar.style.height = enPara.offsetHeight + GLOBAL.DISTANCE + "px";		}	}}/**  * Create the div node for the image item. * * @method createImageItem * @param {String} imgUrl - The url of the image. * @return {Node} The node of the image item. */function createImageItem(imgUrl){	//创建行div容器	var item = document.createElement("div");	item.className = "item " + GLOBAL.itemType.IMAGE;				//右键弹出菜单	item.oncontextmenu = function(event){		//阻止默认的右键菜单		event.preventDefault();				//显示菜单		var menu = document.getElementById("rightClickMenu");		menu.style.left = event.clientX + "px";		menu.style.top = event.clientY + "px";		menu.style.display = "block";				//隐藏相关的菜单项		var onlyText = menu.getElementsByClassName("menu-onlyText");		for(var i=0; i<onlyText.length; i++){			onlyText[i].style.display = "none";		}		//将触发此菜单的item保存到属性srcItem上		menu.srcItem = this;	}		//左图片	var enItem = document.createElement("p");	enItem.className = "item-en";	var lImg = document.createElement("img");	lImg.className = "item-en-image";	lImg.src = imgUrl;	lImg.onload = function(){		var itemDiv = this.parentNode.parentNode;		var stateBar = itemDiv.getElementsByTagName("hr")[0];		stateBar.style.height = this.offsetHeight + GLOBAL.DISTANCE + "px"; 	}	enItem.appendChild(lImg);		 	//状态条	var stateBar = createStateBar(GLOBAL.translationState.PREFECT);				//右图片	var cnItem = document.createElement("p");	cnItem.className = "item-cn";	var rImg = document.createElement("img");	rImg.className = "item-cn-image";	rImg.src = imgUrl;	cnItem.appendChild(rImg);				//加入左图片、状态条、右图片	item.appendChild(enItem);	item.appendChild(stateBar);	item.appendChild(cnItem);		return item;}/**  * Create the div node for the text node. * * @method createTextItem * @param {String} textType - The type of this text item(PA/MH/SH/QU/CO). * @param {String} enContent - The English text. * @param {String} cnContent - The Chinese text. * @param {String} translationState - The translation state of this item. * @return {Div_Node} The div node of the text item. */function createTextItem(textType, enContent, cnContent, translationState){	//创建行div容器	var item = document.createElement("div");	item.className = "item " + textType;		//右键弹出菜单	item.oncontextmenu = function(event){		//阻止默认的右键菜单		event.preventDefault();				//显示菜单		var menu = document.getElementById("rightClickMenu");		menu.style.left = event.clientX + "px";		menu.style.top = event.clientY + "px";		menu.style.display = "block";		//显示相关的菜单项		var onlyText = menu.getElementsByClassName("menu-onlyText");		for(var i=0; i<onlyText.length; i++){			onlyText[i].style.display = "block";		}				//填充链接列表		var links = this.getElementsByClassName("item-en")[0].getElementsByTagName("a");		var linkList = document.getElementById("linkList");		linkList.innerHTML = "";		if(links.length == 0){			var noLink = document.createElement("li");			noLink.innerHTML = "(空)";			linkList.appendChild(noLink);		} else {			for(var i=0; i<links.length; i++){				var linkLi = document.createElement("li");				linkLi.innerHTML = links[i].innerHTML;				linkLi.id = "addLink_link";				linkLi.linkUrl = links[i].href;				linkList.appendChild(linkLi);				}		}				//将触发此菜单的item保存到属性srcItem上		menu.srcItem = this;		menu.selectRange = document.getSelection().getRangeAt(0);		menu.selectNode = document.getSelection().anchorNode;		menu.selectIsCollapsed = document.getSelection().isCollapsed;	}				//创建英文段落	var enItem = document.createElement("p");	enItem.className = "item-en";	enItem.contentEditable = "true";	enItem.innerHTML = enContent;		//退出编辑，则进行高度调整	enItem.onblur = function(){		var cnItem = this.parentNode.getElementsByClassName("item-cn")[0];		var stateBar = this.parentNode.getElementsByTagName("hr")[0];		cnItem.style.height = this.offsetHeight + "px";		stateBar.style.height = this.offsetHeight + GLOBAL.DISTANCE + "px";	}				//创建状态条	var stateBar = createStateBar(translationState);				//创建中文译区	var cnItem = document.createElement("p");	cnItem.className = "item-cn";	cnItem.contentEditable = "true";	cnItem.innerHTML = cnContent;	cnItem.onfocus = function(){		var stateBar = this.parentNode.getElementsByTagName("hr")[0];		stateBar.style.borderTop = "5px solid black";	}	cnItem.onblur = function(){		var stateBar = this.parentNode.getElementsByTagName("hr")[0];		stateBar.style.border = "none";	}		//加入英文原文、状态条、中文译文			item.appendChild(enItem);	item.appendChild(stateBar);	item.appendChild(cnItem);		return item;}/**  * Create the translation state bar. * * @method createStateBar * @param {String} state - The translation state of the paragraph.  * @param {Int} height - The height of the stata bar.   * @return {Node} The node of the state bar.  */function createStateBar(state){	//创建hr条	var stateBar = document.createElement("hr");	stateBar.className = state;		//点击则状态切换	stateBar.onclick = function(){		if(this.className == GLOBAL.translationState.PREFECT){			this.className = GLOBAL.translationState.UNDO;		} else if(this.className == GLOBAL.translationState.UNDO){			this.className = GLOBAL.translationState.PREFECT;				}		}	return stateBar;}/**  * 	Do some initial work for the right-click menu. * * @method initMenu * @param {none}  * @return {none}  */function initMenu(){	//点击鼠标或滚动滚轮，隐藏右键菜单	document.body.onclick = function(){		var menu = document.getElementById("rightClickMenu");		menu.style.display = "none";	}	document.body.onmousewheel  = function(){		var menu = document.getElementById("rightClickMenu");		menu.style.display = "none";	}		//显示（隐藏）二级菜单项	var mainMenuItems = document.getElementsByClassName("menu-mainItem");	for(var i=0; i<mainMenuItems.length; i++){		mainMenuItems[i].onmouseover = function(){			var subMenuItem = this.getElementsByClassName("menu-subItem")[0];			subMenuItem.style.display = "block";			subMenuItem.style.top = "0px";			subMenuItem.style.left = this.offsetWidth - 3 + "px";					}		mainMenuItems[i].onmouseout = function(){			var subMenuItem = this.getElementsByClassName("menu-subItem")[0];			subMenuItem.style.display = "none";				}	}}/**  * Handle the click events triggered by the menuitems. * * @method handleMenu * @param {none}  * @return {none}  */function handleMenu(){	//获取点击的元素	var target = event.target;	if(target.nodeName != "LI"){		target = target.parentNode;	}			//添加事件处理程序	switch(target.id){		//更改条目类型		case "Type_mainHead":		//主标题		case "Type_subHead":		//子标题		case "Type_para":			//段落		case "Type_code":			//代码		case "Type_quote":			//引语		case "Type_list":			//列表			//更换样式			var itemDiv = this.srcItem;			var enItem = itemDiv.getElementsByClassName("item-en")[0];			var cnItem = itemDiv.getElementsByClassName("item-cn")[0];			var stateBar = itemDiv.getElementsByTagName("hr")[0];			var className = target.id.split('_')[1];			itemDiv.className = itemDiv.className.split(' ')[0] + " " + className;			//重新设置高度			cnItem.style.height = enItem.offsetHeight + "px";			stateBar.style.height = enItem.offsetHeight + GLOBAL.DISTANCE + "px";			break;					//插入注解					case "insertAnnotation":			//若光标不在文本区，则退出			if(this.selectNode.nodeName != "#text"){				return;			}			//创建注解			var sup = document.createElement("mark");			sup.className = "annotationIcon";			sup.content = "";						//点击注解图标，则显示注解框；反之隐藏			sup.onclick = function(event){				//显示注解框				var comment = document.getElementById("commentShow");				comment.sourceSup = this;				comment.value = this.content;				comment.style.display = "block";								//设置注解框的位置和宽高				comment.style.left = event.clientX + "px";				comment.style.top = event.clientY + "px";				if((screen.width - 32 - event.clientX) < 200){					comment.style.width = screen.width - event.clientX - 32 + "px";				} else {					comment.style.width = 200 + "px";				}				comment.focus();								//注解框失焦，则隐藏				comment.onblur = function(){							this.style.display = "none";					this.sourceSup.content = this.value;				}			}						//插入注解			this.selectRange.insertNode(sup);			break;					//删除注解		case "deleteAnnotation":			//判断当前的光标位置是否在注解上			if(this.selectNode.nodeName == "MARK"){				//移除注解				var cnItem = this.selectNode.parentNode;				cnItem.removeChild(this.selectNode);			}			break;				//插入行内公式		case "insertFormula":			//创建公示图片			var fm = document.createElement("img");			fm.src = "http://latex.codecogs.com/gif.latex?E=mc^2";			fm.className = "formulaImage";						//点击公式图片，弹出编辑框			fm.onclick = function(event){ 				var fe = document.getElementById("formulaEditor");				fe.value = this.src.split('?')[1];				fe.sourceFormula = this;				fe.style.display = "block";								//设置公式位置				fe.style.left = event.clientX + "px";				fe.style.top = event.clientY + "px";				fe.focus();								//失去焦点				fe.onblur = function(){					this.style.display = "none";					this.sourceFormula.src = GLOBAL.formulaServer + this.value;				}								//输入变化				fe.oninput = function(){					this.sourceFormula.src = GLOBAL.formulaServer + this.value;				}			}						//插入公式			this.selectRange.insertNode(fm);			break;					//添加超链接		case "addLink_link":			//若选取的起点和终点不重合			if(!this.selectIsCollapsed){				var link = document.createElement("a");				link.href = target.linkUrl;				link.target = "_blank";				this.selectRange.surroundContents(link);			}			break;						//移除超链接		case "removeLink":			var selectParentNode = this.selectNode.parentNode;			if(selectParentNode.nodeName == "A"){				var linkText = selectParentNode.innerHTML;				var item = selectParentNode.parentNode;				item.replaceChild(document.createTextNode(linkText), selectParentNode);			}			break;					//加入新条目		case "addItem":			//构建addItem 			var addDiv = document.createElement("div");			addDiv.className = "addItem";			var addContent = document.createElement("p");			addContent.contentEditable = "true";			addContent.onblur = function(){				var main = document.getElementById("main");										//若包含图片节点				if(addContent.getElementsByTagName("img").length != 0){					//创建并加入图片条目					var img = addContent.getElementsByTagName("img")[0];					var imgItem = createImageItem(img.src);					main.insertBefore(imgItem, this.parentNode);				} 				else {					var content = getPureText(addContent.innerHTML);										//若为空，则退出					if(content == ""){						//移除输入框						main.removeChild(this.parentNode);						return;					} 					else if(content.match(/\b(http:\/\/)/) && content.match(/\b.(gif|png|jpeg|jpg)/)){						//创建并加入图片条目						var imgItem = createImageItem(content);						main.insertBefore(imgItem, this.parentNode);											} 					else { 							//创建并加入文本条目						var textItem = createTextItem(GLOBAL.itemType.PARA, content, "", GLOBAL.translationState.UNDO);						main.insertBefore(textItem, this.parentNode);													//设置状态栏、中文段落的高度						var enPara = textItem.getElementsByClassName("item-en")[0];						var cnPara = textItem.getElementsByClassName("item-cn")[0];						var stateBar = textItem.getElementsByTagName("hr")[0];						cnPara.style.height = enPara.offsetHeight + "px";						stateBar.style.height = enPara.offsetHeight + GLOBAL.DISTANCE + "px";								}				}									//移除输入框				main.removeChild(this.parentNode);			}			addDiv.appendChild(addContent);			//插入新条目			var main = document.getElementById("main");			var itemDiv = this.srcItem;			main.insertBefore(addDiv, itemDiv.nextSibling);			//聚焦			addContent.focus();							break;						//删除条目		case "deleteItem":			var main = document.getElementById("main");			var itemDiv = this.srcItem;			main.removeChild(itemDiv);			break;	}}/**  * Update the Article Data. * * @method updateArticleData * @param {none}  * @return {object} The object of an article collected from the translation page. */function updateArticleData(){	//更新中文标题	GLOBAL.currentArticle.cnTitle = document.getElementById("cnTitle").value;			//更新最后编辑时间	GLOBAL.currentArticle.lastEditTime = (new Date()).getTime();		//更新中英段落、翻译状态、段落类型	var itemDiv = document.getElementsByClassName("item");	var itemList = [];	var completeness = 0.0;	for(var i=0; i<itemDiv.length; i++){		itemList[i] = {};		 		//保存中英段落 		if(itemDiv[i].className.split(' ')[1] == GLOBAL.itemType.IMAGE){				var image = itemDiv[i].getElementsByClassName("item-en-image")[0];			itemList[i].enItem = itemList[i].cnItem = image.src;		} else {			var enItem = itemDiv[i].getElementsByClassName("item-en")[0];			itemList[i].enItem = getPureText(enItem.innerHTML);			var cnItem = itemDiv[i].getElementsByClassName("item-cn")[0];			itemList[i].cnItem = getPureText(cnItem.innerHTML);		}					//保存段落类型		itemList[i].itemType = itemDiv[i].className.split(' ')[1];		//保存翻译状态		var tranState = itemDiv[i].getElementsByTagName("hr")[0];		itemList[i].tranState = tranState.className;				//累加翻译进度值 		if(tranState.className == GLOBAL.translationState.PREFECT){			completeness ++;		}	}	GLOBAL.currentArticle.itemList = itemList;		//更新翻译完成度	GLOBAL.currentArticle.complete = Math.floor(completeness / itemDiv.length * 100);		//更新注解	var commentList = [];		var sups = document.getElementsByTagName("mark");	if(sups.length != 0){		for(var j=0; j<sups.length; j++){			commentList.push(sups[j].content);		}	}		GLOBAL.currentArticle.commentList = commentList;	return GLOBAL.currentArticle;}/**  * Add event handle to the save-article button. * * @method handleSaveArticle * @param {none}  * @return {none}  */function handleSaveArticle(){	//从页面获取文章数据	var article = updateArticleData();		//保存文章	updateDataItem("Article", article.enTitle, JSON.stringify(article));		//显示保存提示	showNotice("已保存于 " + (new Date()).toLocaleTimeString(), 1200);}/**  * Show notice. * * @method showNotice * @param {String}  * @param {Int} time - The time the notice'll display for.  * @return {none}  */function showNotice(notice, time){	var note = document.getElementById("saveNote");	note.innerHTML = notice;	note.style.display = "block";	setTimeout("$('#saveNote').fadeOut('slow')", time);}/**  * Turn back to the main page and record the last edit article's title. * * @method handleViewArticle * @param {none}  * @return {none} */function handleViewArticle(){	//保存文章	var article = updateArticleData();	updateDataItem("Article", article.enTitle, JSON.stringify(article));		//隐藏页面	window.parent.hideTranslationPage();}/**  * To handle the key event. * * @method handleKeyEvent * @param {Object} event - The event object. * @return {none}  */function handleKeyEvent(event){	if(event.ctrlKey && event.keyCode == 83)	{		//从页面获取文章数据		var article = updateArticleData();			//保存文章		updateDataItem("Article", article.enTitle, JSON.stringify(article));			//显示保存提示		showNotice("已保存于 " + (new Date()).toLocaleTimeString(), 1200);		event.preventDefault();	}}